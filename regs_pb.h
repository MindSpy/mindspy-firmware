/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.6-dev at Sat Jan 25 19:37:08 2014. */

#ifndef _PB_REGS_PB_H_
#define _PB_REGS_PB_H_
#include <pb.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Request_Action {
    Request_Action_ECHO = 0,
    Request_Action_GET_STATE = 2,
    Request_Action_SET_STATE = 3,
    Request_Action_SAMPLES = 1,
    Request_Action_TEST = 4,
    Request_Action_LED = 5,
    Request_Action_STIMULATE = 6
} Request_Action;

typedef enum _Response_ErrNo {
    Response_ErrNo_NO_ERROR = 0,
    Response_ErrNo_HANDLER_MISSING = 1,
    Response_ErrNo_HANDLER_FAILED = 2
} Response_ErrNo;

/* Struct definitions */
typedef struct {
    size_t size;
    uint8_t bytes[32];
} Request_payload_t;

typedef struct _Request {
    Request_Action action;
    uint64_t timestamp;
    bool has_start;
    uint32_t start;
    bool has_count;
    uint32_t count;
    bool has_payload;
    Request_payload_t payload;
    bool has_stream;
    bool stream;
} Request;

typedef struct _Sample {
    uint64_t sequence;
    size_t payload_count;
    int32_t payload[32];
} Sample;

typedef struct _Separator {
    bool last;
} Separator;

typedef struct _State {
    uint32_t address;
    uint32_t payload;
} State;

typedef struct _Response {
    bool has_error;
    Response_ErrNo error;
    bool has_error_msg;
    char error_msg[32];
    uint64_t timestamp;
    pb_callback_t state;
    pb_callback_t sample;
} Response;

/* Default values for struct fields */
extern const bool Request_stream_default;
extern const Response_ErrNo Response_error_default;

/* Field tags (for use in manual encoding/decoding) */
#define Request_action_tag                       1
#define Request_timestamp_tag                    2
#define Request_stream_tag                       6
#define Request_start_tag                        3
#define Request_count_tag                        4
#define Request_payload_tag                      5
#define Sample_sequence_tag                      1
#define Sample_payload_tag                       2
#define Separator_last_tag                       1
#define State_address_tag                        1
#define State_payload_tag                        2
#define Response_error_tag                       1
#define Response_error_msg_tag                   2
#define Response_timestamp_tag                   3
#define Response_state_tag                       4
#define Response_sample_tag                      5

/* Struct field encoding specification for nanopb */
extern const pb_field_t Separator_fields[2];
extern const pb_field_t Request_fields[7];
extern const pb_field_t State_fields[3];
extern const pb_field_t Sample_fields[3];
extern const pb_field_t Response_fields[6];

/* Maximum encoded size of messages (where known) */
#define Separator_size                           2
#define Request_size                             65
#define State_size                               12
#define Sample_size                              363

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
