// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regs2.proto

#ifndef PROTOBUF_regs2_2eproto__INCLUDED
#define PROTOBUF_regs2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobufs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_regs2_2eproto();
void protobuf_AssignDesc_regs2_2eproto();
void protobuf_ShutdownFile_regs2_2eproto();

class Separator;
class State;
class Sample;
class GetSamples;
class GetState;
class SetState;
class GetModelName;
class Request;
class Response;

// ===================================================================

class Separator : public ::google::protobuf::Message {
 public:
  Separator();
  virtual ~Separator();

  Separator(const Separator& from);

  inline Separator& operator=(const Separator& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Separator& default_instance();

  void Swap(Separator* other);

  // implements Message ----------------------------------------------

  Separator* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Separator& from);
  void MergeFrom(const Separator& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 size = 1;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // required bool last = 2;
  inline bool has_last() const;
  inline void clear_last();
  static const int kLastFieldNumber = 2;
  inline bool last() const;
  inline void set_last(bool value);

  // @@protoc_insertion_point(class_scope:protobufs.Separator)
 private:
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_last();
  inline void clear_has_last();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 size_;
  bool last_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static Separator* default_instance_;
};
// -------------------------------------------------------------------

class State : public ::google::protobuf::Message {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const State& default_instance();

  void Swap(State* other);

  // implements Message ----------------------------------------------

  State* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 address() const;
  inline void set_address(::google::protobuf::uint32 value);

  // required uint32 payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline ::google::protobuf::uint32 payload() const;
  inline void set_payload(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protobufs.State)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_payload();
  inline void clear_has_payload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 address_;
  ::google::protobuf::uint32 payload_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static State* default_instance_;
};
// -------------------------------------------------------------------

class Sample : public ::google::protobuf::Message {
 public:
  Sample();
  virtual ~Sample();

  Sample(const Sample& from);

  inline Sample& operator=(const Sample& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sample& default_instance();

  void Swap(Sample* other);

  // implements Message ----------------------------------------------

  Sample* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sample& from);
  void MergeFrom(const Sample& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint64 sequence() const;
  inline void set_sequence(::google::protobuf::uint64 value);

  // repeated int32 payload = 2 [packed = true];
  inline int payload_size() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline ::google::protobuf::int32 payload(int index) const;
  inline void set_payload(int index, ::google::protobuf::int32 value);
  inline void add_payload(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      payload() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_payload();

  // @@protoc_insertion_point(class_scope:protobufs.Sample)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sequence_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > payload_;
  mutable int _payload_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static Sample* default_instance_;
};
// -------------------------------------------------------------------

class GetSamples : public ::google::protobuf::Message {
 public:
  GetSamples();
  virtual ~GetSamples();

  GetSamples(const GetSamples& from);

  inline GetSamples& operator=(const GetSamples& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSamples& default_instance();

  void Swap(GetSamples* other);

  // implements Message ----------------------------------------------

  GetSamples* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSamples& from);
  void MergeFrom(const GetSamples& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protobufs.GetSamples)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static GetSamples* default_instance_;
};
// -------------------------------------------------------------------

class GetState : public ::google::protobuf::Message {
 public:
  GetState();
  virtual ~GetState();

  GetState(const GetState& from);

  inline GetState& operator=(const GetState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetState& default_instance();

  void Swap(GetState* other);

  // implements Message ----------------------------------------------

  GetState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetState& from);
  void MergeFrom(const GetState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 addresses = 1 [packed = true];
  inline int addresses_size() const;
  inline void clear_addresses();
  static const int kAddressesFieldNumber = 1;
  inline ::google::protobuf::uint32 addresses(int index) const;
  inline void set_addresses(int index, ::google::protobuf::uint32 value);
  inline void add_addresses(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      addresses() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_addresses();

  // @@protoc_insertion_point(class_scope:protobufs.GetState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > addresses_;
  mutable int _addresses_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static GetState* default_instance_;
};
// -------------------------------------------------------------------

class SetState : public ::google::protobuf::Message {
 public:
  SetState();
  virtual ~SetState();

  SetState(const SetState& from);

  inline SetState& operator=(const SetState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetState& default_instance();

  void Swap(SetState* other);

  // implements Message ----------------------------------------------

  SetState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetState& from);
  void MergeFrom(const SetState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobufs.State states = 1;
  inline int states_size() const;
  inline void clear_states();
  static const int kStatesFieldNumber = 1;
  inline const ::protobufs::State& states(int index) const;
  inline ::protobufs::State* mutable_states(int index);
  inline ::protobufs::State* add_states();
  inline const ::google::protobuf::RepeatedPtrField< ::protobufs::State >&
      states() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobufs::State >*
      mutable_states();

  // @@protoc_insertion_point(class_scope:protobufs.SetState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protobufs::State > states_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static SetState* default_instance_;
};
// -------------------------------------------------------------------

class GetModelName : public ::google::protobuf::Message {
 public:
  GetModelName();
  virtual ~GetModelName();

  GetModelName(const GetModelName& from);

  inline GetModelName& operator=(const GetModelName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetModelName& default_instance();

  void Swap(GetModelName* other);

  // implements Message ----------------------------------------------

  GetModelName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetModelName& from);
  void MergeFrom(const GetModelName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobufs.GetModelName)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static GetModelName* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // required uint32 reqid = 2;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 2;
  inline ::google::protobuf::uint32 reqid() const;
  inline void set_reqid(::google::protobuf::uint32 value);

  // optional uint32 module = 3;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 3;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);

  // optional bool stream = 4 [default = false];
  inline bool has_stream() const;
  inline void clear_stream();
  static const int kStreamFieldNumber = 4;
  inline bool stream() const;
  inline void set_stream(bool value);

  // optional .protobufs.GetSamples getSamples = 5;
  inline bool has_getsamples() const;
  inline void clear_getsamples();
  static const int kGetSamplesFieldNumber = 5;
  inline const ::protobufs::GetSamples& getsamples() const;
  inline ::protobufs::GetSamples* mutable_getsamples();
  inline ::protobufs::GetSamples* release_getsamples();
  inline void set_allocated_getsamples(::protobufs::GetSamples* getsamples);

  // optional .protobufs.GetState getState = 6;
  inline bool has_getstate() const;
  inline void clear_getstate();
  static const int kGetStateFieldNumber = 6;
  inline const ::protobufs::GetState& getstate() const;
  inline ::protobufs::GetState* mutable_getstate();
  inline ::protobufs::GetState* release_getstate();
  inline void set_allocated_getstate(::protobufs::GetState* getstate);

  // optional .protobufs.SetState setState = 7;
  inline bool has_setstate() const;
  inline void clear_setstate();
  static const int kSetStateFieldNumber = 7;
  inline const ::protobufs::SetState& setstate() const;
  inline ::protobufs::SetState* mutable_setstate();
  inline ::protobufs::SetState* release_setstate();
  inline void set_allocated_setstate(::protobufs::SetState* setstate);

  // optional .protobufs.GetModelName getModelName = 8;
  inline bool has_getmodelname() const;
  inline void clear_getmodelname();
  static const int kGetModelNameFieldNumber = 8;
  inline const ::protobufs::GetModelName& getmodelname() const;
  inline ::protobufs::GetModelName* mutable_getmodelname();
  inline ::protobufs::GetModelName* release_getmodelname();
  inline void set_allocated_getmodelname(::protobufs::GetModelName* getmodelname);

  // @@protoc_insertion_point(class_scope:protobufs.Request)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_module();
  inline void clear_has_module();
  inline void set_has_stream();
  inline void clear_has_stream();
  inline void set_has_getsamples();
  inline void clear_has_getsamples();
  inline void set_has_getstate();
  inline void clear_has_getstate();
  inline void set_has_setstate();
  inline void clear_has_setstate();
  inline void set_has_getmodelname();
  inline void clear_has_getmodelname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 reqid_;
  ::google::protobuf::uint32 module_;
  ::protobufs::GetSamples* getsamples_;
  ::protobufs::GetState* getstate_;
  ::protobufs::SetState* setstate_;
  ::protobufs::GetModelName* getmodelname_;
  bool stream_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // required uint32 reqid = 2;
  inline bool has_reqid() const;
  inline void clear_reqid();
  static const int kReqidFieldNumber = 2;
  inline ::google::protobuf::uint32 reqid() const;
  inline void set_reqid(::google::protobuf::uint32 value);

  // optional uint32 module = 3;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 3;
  inline ::google::protobuf::uint32 module() const;
  inline void set_module(::google::protobuf::uint32 value);

  // repeated .protobufs.State states = 4;
  inline int states_size() const;
  inline void clear_states();
  static const int kStatesFieldNumber = 4;
  inline const ::protobufs::State& states(int index) const;
  inline ::protobufs::State* mutable_states(int index);
  inline ::protobufs::State* add_states();
  inline const ::google::protobuf::RepeatedPtrField< ::protobufs::State >&
      states() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobufs::State >*
      mutable_states();

  // repeated .protobufs.Sample samples = 5;
  inline int samples_size() const;
  inline void clear_samples();
  static const int kSamplesFieldNumber = 5;
  inline const ::protobufs::Sample& samples(int index) const;
  inline ::protobufs::Sample* mutable_samples(int index);
  inline ::protobufs::Sample* add_samples();
  inline const ::google::protobuf::RepeatedPtrField< ::protobufs::Sample >&
      samples() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobufs::Sample >*
      mutable_samples();

  // optional string modelName = 6;
  inline bool has_modelname() const;
  inline void clear_modelname();
  static const int kModelNameFieldNumber = 6;
  inline const ::std::string& modelname() const;
  inline void set_modelname(const ::std::string& value);
  inline void set_modelname(const char* value);
  inline void set_modelname(const char* value, size_t size);
  inline ::std::string* mutable_modelname();
  inline ::std::string* release_modelname();
  inline void set_allocated_modelname(::std::string* modelname);

  // optional string error_msg = 7;
  inline bool has_error_msg() const;
  inline void clear_error_msg();
  static const int kErrorMsgFieldNumber = 7;
  inline const ::std::string& error_msg() const;
  inline void set_error_msg(const ::std::string& value);
  inline void set_error_msg(const char* value);
  inline void set_error_msg(const char* value, size_t size);
  inline ::std::string* mutable_error_msg();
  inline ::std::string* release_error_msg();
  inline void set_allocated_error_msg(::std::string* error_msg);

  // @@protoc_insertion_point(class_scope:protobufs.Response)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_reqid();
  inline void clear_has_reqid();
  inline void set_has_module();
  inline void clear_has_module();
  inline void set_has_modelname();
  inline void clear_has_modelname();
  inline void set_has_error_msg();
  inline void clear_has_error_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 reqid_;
  ::google::protobuf::uint32 module_;
  ::google::protobuf::RepeatedPtrField< ::protobufs::State > states_;
  ::google::protobuf::RepeatedPtrField< ::protobufs::Sample > samples_;
  ::std::string* modelname_;
  ::std::string* error_msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_regs2_2eproto();
  friend void protobuf_AssignDesc_regs2_2eproto();
  friend void protobuf_ShutdownFile_regs2_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// Separator

// required uint32 size = 1;
inline bool Separator::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Separator::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Separator::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Separator::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 Separator::size() const {
  return size_;
}
inline void Separator::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
}

// required bool last = 2;
inline bool Separator::has_last() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Separator::set_has_last() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Separator::clear_has_last() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Separator::clear_last() {
  last_ = false;
  clear_has_last();
}
inline bool Separator::last() const {
  return last_;
}
inline void Separator::set_last(bool value) {
  set_has_last();
  last_ = value;
}

// -------------------------------------------------------------------

// State

// required uint32 address = 1;
inline bool State::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void State::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void State::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void State::clear_address() {
  address_ = 0u;
  clear_has_address();
}
inline ::google::protobuf::uint32 State::address() const {
  return address_;
}
inline void State::set_address(::google::protobuf::uint32 value) {
  set_has_address();
  address_ = value;
}

// required uint32 payload = 2;
inline bool State::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void State::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void State::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void State::clear_payload() {
  payload_ = 0u;
  clear_has_payload();
}
inline ::google::protobuf::uint32 State::payload() const {
  return payload_;
}
inline void State::set_payload(::google::protobuf::uint32 value) {
  set_has_payload();
  payload_ = value;
}

// -------------------------------------------------------------------

// Sample

// required uint64 sequence = 1;
inline bool Sample::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sample::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sample::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sample::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence();
}
inline ::google::protobuf::uint64 Sample::sequence() const {
  return sequence_;
}
inline void Sample::set_sequence(::google::protobuf::uint64 value) {
  set_has_sequence();
  sequence_ = value;
}

// repeated int32 payload = 2 [packed = true];
inline int Sample::payload_size() const {
  return payload_.size();
}
inline void Sample::clear_payload() {
  payload_.Clear();
}
inline ::google::protobuf::int32 Sample::payload(int index) const {
  return payload_.Get(index);
}
inline void Sample::set_payload(int index, ::google::protobuf::int32 value) {
  payload_.Set(index, value);
}
inline void Sample::add_payload(::google::protobuf::int32 value) {
  payload_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Sample::payload() const {
  return payload_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Sample::mutable_payload() {
  return &payload_;
}

// -------------------------------------------------------------------

// GetSamples

// required uint32 count = 1;
inline bool GetSamples::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSamples::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSamples::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSamples::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetSamples::count() const {
  return count_;
}
inline void GetSamples::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GetState

// repeated uint32 addresses = 1 [packed = true];
inline int GetState::addresses_size() const {
  return addresses_.size();
}
inline void GetState::clear_addresses() {
  addresses_.Clear();
}
inline ::google::protobuf::uint32 GetState::addresses(int index) const {
  return addresses_.Get(index);
}
inline void GetState::set_addresses(int index, ::google::protobuf::uint32 value) {
  addresses_.Set(index, value);
}
inline void GetState::add_addresses(::google::protobuf::uint32 value) {
  addresses_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetState::addresses() const {
  return addresses_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetState::mutable_addresses() {
  return &addresses_;
}

// -------------------------------------------------------------------

// SetState

// repeated .protobufs.State states = 1;
inline int SetState::states_size() const {
  return states_.size();
}
inline void SetState::clear_states() {
  states_.Clear();
}
inline const ::protobufs::State& SetState::states(int index) const {
  return states_.Get(index);
}
inline ::protobufs::State* SetState::mutable_states(int index) {
  return states_.Mutable(index);
}
inline ::protobufs::State* SetState::add_states() {
  return states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobufs::State >&
SetState::states() const {
  return states_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobufs::State >*
SetState::mutable_states() {
  return &states_;
}

// -------------------------------------------------------------------

// GetModelName

// -------------------------------------------------------------------

// Request

// required uint64 timestamp = 1;
inline bool Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Request::timestamp() const {
  return timestamp_;
}
inline void Request::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// required uint32 reqid = 2;
inline bool Request::has_reqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_reqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_reqid() {
  reqid_ = 0u;
  clear_has_reqid();
}
inline ::google::protobuf::uint32 Request::reqid() const {
  return reqid_;
}
inline void Request::set_reqid(::google::protobuf::uint32 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint32 module = 3;
inline bool Request::has_module() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_module() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_module() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_module() {
  module_ = 0u;
  clear_has_module();
}
inline ::google::protobuf::uint32 Request::module() const {
  return module_;
}
inline void Request::set_module(::google::protobuf::uint32 value) {
  set_has_module();
  module_ = value;
}

// optional bool stream = 4 [default = false];
inline bool Request::has_stream() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_stream() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_stream() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_stream() {
  stream_ = false;
  clear_has_stream();
}
inline bool Request::stream() const {
  return stream_;
}
inline void Request::set_stream(bool value) {
  set_has_stream();
  stream_ = value;
}

// optional .protobufs.GetSamples getSamples = 5;
inline bool Request::has_getsamples() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_getsamples() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_getsamples() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_getsamples() {
  if (getsamples_ != NULL) getsamples_->::protobufs::GetSamples::Clear();
  clear_has_getsamples();
}
inline const ::protobufs::GetSamples& Request::getsamples() const {
  return getsamples_ != NULL ? *getsamples_ : *default_instance_->getsamples_;
}
inline ::protobufs::GetSamples* Request::mutable_getsamples() {
  set_has_getsamples();
  if (getsamples_ == NULL) getsamples_ = new ::protobufs::GetSamples;
  return getsamples_;
}
inline ::protobufs::GetSamples* Request::release_getsamples() {
  clear_has_getsamples();
  ::protobufs::GetSamples* temp = getsamples_;
  getsamples_ = NULL;
  return temp;
}
inline void Request::set_allocated_getsamples(::protobufs::GetSamples* getsamples) {
  delete getsamples_;
  getsamples_ = getsamples;
  if (getsamples) {
    set_has_getsamples();
  } else {
    clear_has_getsamples();
  }
}

// optional .protobufs.GetState getState = 6;
inline bool Request::has_getstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_getstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_getstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_getstate() {
  if (getstate_ != NULL) getstate_->::protobufs::GetState::Clear();
  clear_has_getstate();
}
inline const ::protobufs::GetState& Request::getstate() const {
  return getstate_ != NULL ? *getstate_ : *default_instance_->getstate_;
}
inline ::protobufs::GetState* Request::mutable_getstate() {
  set_has_getstate();
  if (getstate_ == NULL) getstate_ = new ::protobufs::GetState;
  return getstate_;
}
inline ::protobufs::GetState* Request::release_getstate() {
  clear_has_getstate();
  ::protobufs::GetState* temp = getstate_;
  getstate_ = NULL;
  return temp;
}
inline void Request::set_allocated_getstate(::protobufs::GetState* getstate) {
  delete getstate_;
  getstate_ = getstate;
  if (getstate) {
    set_has_getstate();
  } else {
    clear_has_getstate();
  }
}

// optional .protobufs.SetState setState = 7;
inline bool Request::has_setstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request::set_has_setstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request::clear_has_setstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request::clear_setstate() {
  if (setstate_ != NULL) setstate_->::protobufs::SetState::Clear();
  clear_has_setstate();
}
inline const ::protobufs::SetState& Request::setstate() const {
  return setstate_ != NULL ? *setstate_ : *default_instance_->setstate_;
}
inline ::protobufs::SetState* Request::mutable_setstate() {
  set_has_setstate();
  if (setstate_ == NULL) setstate_ = new ::protobufs::SetState;
  return setstate_;
}
inline ::protobufs::SetState* Request::release_setstate() {
  clear_has_setstate();
  ::protobufs::SetState* temp = setstate_;
  setstate_ = NULL;
  return temp;
}
inline void Request::set_allocated_setstate(::protobufs::SetState* setstate) {
  delete setstate_;
  setstate_ = setstate;
  if (setstate) {
    set_has_setstate();
  } else {
    clear_has_setstate();
  }
}

// optional .protobufs.GetModelName getModelName = 8;
inline bool Request::has_getmodelname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request::set_has_getmodelname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request::clear_has_getmodelname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request::clear_getmodelname() {
  if (getmodelname_ != NULL) getmodelname_->::protobufs::GetModelName::Clear();
  clear_has_getmodelname();
}
inline const ::protobufs::GetModelName& Request::getmodelname() const {
  return getmodelname_ != NULL ? *getmodelname_ : *default_instance_->getmodelname_;
}
inline ::protobufs::GetModelName* Request::mutable_getmodelname() {
  set_has_getmodelname();
  if (getmodelname_ == NULL) getmodelname_ = new ::protobufs::GetModelName;
  return getmodelname_;
}
inline ::protobufs::GetModelName* Request::release_getmodelname() {
  clear_has_getmodelname();
  ::protobufs::GetModelName* temp = getmodelname_;
  getmodelname_ = NULL;
  return temp;
}
inline void Request::set_allocated_getmodelname(::protobufs::GetModelName* getmodelname) {
  delete getmodelname_;
  getmodelname_ = getmodelname;
  if (getmodelname) {
    set_has_getmodelname();
  } else {
    clear_has_getmodelname();
  }
}

// -------------------------------------------------------------------

// Response

// required uint64 timestamp = 1;
inline bool Response::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Response::timestamp() const {
  return timestamp_;
}
inline void Response::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// required uint32 reqid = 2;
inline bool Response::has_reqid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_reqid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_reqid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_reqid() {
  reqid_ = 0u;
  clear_has_reqid();
}
inline ::google::protobuf::uint32 Response::reqid() const {
  return reqid_;
}
inline void Response::set_reqid(::google::protobuf::uint32 value) {
  set_has_reqid();
  reqid_ = value;
}

// optional uint32 module = 3;
inline bool Response::has_module() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_module() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_module() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_module() {
  module_ = 0u;
  clear_has_module();
}
inline ::google::protobuf::uint32 Response::module() const {
  return module_;
}
inline void Response::set_module(::google::protobuf::uint32 value) {
  set_has_module();
  module_ = value;
}

// repeated .protobufs.State states = 4;
inline int Response::states_size() const {
  return states_.size();
}
inline void Response::clear_states() {
  states_.Clear();
}
inline const ::protobufs::State& Response::states(int index) const {
  return states_.Get(index);
}
inline ::protobufs::State* Response::mutable_states(int index) {
  return states_.Mutable(index);
}
inline ::protobufs::State* Response::add_states() {
  return states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobufs::State >&
Response::states() const {
  return states_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobufs::State >*
Response::mutable_states() {
  return &states_;
}

// repeated .protobufs.Sample samples = 5;
inline int Response::samples_size() const {
  return samples_.size();
}
inline void Response::clear_samples() {
  samples_.Clear();
}
inline const ::protobufs::Sample& Response::samples(int index) const {
  return samples_.Get(index);
}
inline ::protobufs::Sample* Response::mutable_samples(int index) {
  return samples_.Mutable(index);
}
inline ::protobufs::Sample* Response::add_samples() {
  return samples_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobufs::Sample >&
Response::samples() const {
  return samples_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobufs::Sample >*
Response::mutable_samples() {
  return &samples_;
}

// optional string modelName = 6;
inline bool Response::has_modelname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_modelname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_modelname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_modelname() {
  if (modelname_ != &::google::protobuf::internal::kEmptyString) {
    modelname_->clear();
  }
  clear_has_modelname();
}
inline const ::std::string& Response::modelname() const {
  return *modelname_;
}
inline void Response::set_modelname(const ::std::string& value) {
  set_has_modelname();
  if (modelname_ == &::google::protobuf::internal::kEmptyString) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void Response::set_modelname(const char* value) {
  set_has_modelname();
  if (modelname_ == &::google::protobuf::internal::kEmptyString) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void Response::set_modelname(const char* value, size_t size) {
  set_has_modelname();
  if (modelname_ == &::google::protobuf::internal::kEmptyString) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Response::mutable_modelname() {
  set_has_modelname();
  if (modelname_ == &::google::protobuf::internal::kEmptyString) {
    modelname_ = new ::std::string;
  }
  return modelname_;
}
inline ::std::string* Response::release_modelname() {
  clear_has_modelname();
  if (modelname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = modelname_;
    modelname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Response::set_allocated_modelname(::std::string* modelname) {
  if (modelname_ != &::google::protobuf::internal::kEmptyString) {
    delete modelname_;
  }
  if (modelname) {
    set_has_modelname();
    modelname_ = modelname;
  } else {
    clear_has_modelname();
    modelname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string error_msg = 7;
inline bool Response::has_error_msg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Response::set_has_error_msg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Response::clear_has_error_msg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Response::clear_error_msg() {
  if (error_msg_ != &::google::protobuf::internal::kEmptyString) {
    error_msg_->clear();
  }
  clear_has_error_msg();
}
inline const ::std::string& Response::error_msg() const {
  return *error_msg_;
}
inline void Response::set_error_msg(const ::std::string& value) {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::kEmptyString) {
    error_msg_ = new ::std::string;
  }
  error_msg_->assign(value);
}
inline void Response::set_error_msg(const char* value) {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::kEmptyString) {
    error_msg_ = new ::std::string;
  }
  error_msg_->assign(value);
}
inline void Response::set_error_msg(const char* value, size_t size) {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::kEmptyString) {
    error_msg_ = new ::std::string;
  }
  error_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Response::mutable_error_msg() {
  set_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::kEmptyString) {
    error_msg_ = new ::std::string;
  }
  return error_msg_;
}
inline ::std::string* Response::release_error_msg() {
  clear_has_error_msg();
  if (error_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_msg_;
    error_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Response::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete error_msg_;
  }
  if (error_msg) {
    set_has_error_msg();
    error_msg_ = error_msg;
  } else {
    clear_has_error_msg();
    error_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobufs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_regs2_2eproto__INCLUDED
